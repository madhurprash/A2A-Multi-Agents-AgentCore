general:
  name: "ops-orchestrator-agent"      
  description: ""

# This contains the model information for various agents
# in our multi agentic system
agent_information:
  # Represents the system prompt templates for each agent
  prompt_templates:
    prompt_template_dir: prompt_template
    # This is the system prompt for the monitoring agent that will be used 
    # in agent creation and development
    ops_orchestrator_agent:
  ops_orchestrator_agent_model_info: 
    # Represents the model id that the agent will use within 
    # the strands agents SDK
    model_id: gpt-4o-2024-08-06
    # Represents the inference parameters that the foundation model
    # uses at runtime during inference
    inference_parameters:
      # This is not an exhaustive list, it can be changed or extended
      # based on the inference parameters that are supported
      temperature: 0.1
      max_tokens: 2048
    # There are memories for all of the agents that will be used in this sample
    # there are three agents with different memory storage strategies and all will be used
    memories:
      lead_agent:
        use_existing: true
        memory_id: OpsAgent_mem_1753364538-TvqIKh3jxd
    memory_credentials:
      # fetch this from your AWS console
      id: 
    memory_allocation:
      # An actor refers to an entity such as an end user or an agent that interacts with the
      # agent application. For example, in a coding use case, an actor is a developer asking
      # questions to the assistant. Using the actor id helps the system know which user the 
      # memory belongs to, keeping each user's data separate and organized
      actor_id: actor_agent_openAI_madhur2039
      # The session is usually a single conversation that is the interaction period between
      # the user and the AI agent
      # A namespace is used to logically group and organize the long term memories, these will
      # be created on the fly using the strategies that are used in the memory for the agent.
    # set this to false if the agent arn is provided from above
    launch_agentcore_runtime: true
    # this is the runtime execution role for the agent that will be used 
    runtime_exec_role: arn:aws:iam::218208277580:role/service-role/Amazon-Bedrock-IAM-Role-20240102T112809
  
# Authentication configuration for OIDC
idp_setup:
  user_pool_id: us-west-2_VveqvN6ar
  discovery_url: https://cognito-idp.us-west-2.amazonaws.com/us-west-2_VveqvN6ar/.well-known/openid-configuration
  client_secret: vkapqeb6629d0o2vqpen2k9ji9buha9vn4p8mkr7ao4h89bs81p
  client_id: 27p4n7fn6t5fttt0hif3eehnmr

# this is information about the cloudwatch related tools that will be used
# in the agent
cloudwatch_agent_resources:
  log_group_name: "agents/operations-agent"
  log_stream_name: "operationsagent"