# Jira API for Ops Orchestrator Agent (OpenAPI 3.0.0)
openapi: 3.0.0
info:
  title: Jira API for Ops Orchestrator Agent
  version: 3.0.0
  description: Atlassian Jira REST API v3 for issue and project management
servers:
  - url: https://api.atlassian.com/ex/jira/{cloudid}/rest/api/3
    variables:
      cloudid:
        default: your-cloud-id
paths:
  /issue:
    post:
      operationId: createIssue
      summary: Create a new Jira issue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [fields]
              properties:
                fields:
                  type: object
                  required: [project, summary, issuetype]
                  properties:
                    project:
                      type: object
                      properties:
                        key: { type: string }
                        id:  { type: string }
                    summary:     { type: string }
                    description:
                      type: object
                      properties:
                        type:    { type: string, default: doc }
                        version: { type: integer, default: 1 }
                        content: { type: array, items: { type: object } }
                    issuetype:
                      type: object
                      properties:
                        name: { type: string }
                        id:   { type: string }
                    priority:
                      type: object
                      properties:
                        name: { type: string, enum: [Highest,High,Medium,Low,Lowest] }
                        id:   { type: string }
                    assignee:
                      type: object
                      properties:
                        accountId: { type: string }
                    labels:
                      type: array
                      items: { type: string }
                    components:
                      type: array
                      items:
                        type: object
                        properties:
                          id:   { type: string }
                          name: { type: string }
      responses:
        '201':
          description: Issue created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedIssue'
  /issue/{issueIdOrKey}:
    get:
      operationId: getIssue
      summary: Get issue details
      parameters:
        - name: issueIdOrKey
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Issue' }
    put:
      operationId: editIssue
      summary: Update an existing Jira issue
      parameters:
        - name: issueIdOrKey
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fields:
                  type: object
                update:
                  type: object
      responses:
        '204':
          description: Issue updated successfully
  /issue/{issueIdOrKey}/transitions:
    get:
      operationId: getTransitions
      summary: List available transitions
      parameters:
        - name: issueIdOrKey
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: List of available transitions
          content:
            application/json:
              schema:
                type: object
                properties:
                  transitions:
                    type: array
                    items: { $ref: '#/components/schemas/Transition' }
    post:
      operationId: doTransition
      summary: Perform a transition
      parameters:
        - name: issueIdOrKey
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [transition]
              properties:
                transition:
                  type: object
                  required: [id]
                  properties:
                    id: { type: string }
      responses:
        '204':
          description: Transition performed successfully
components:
  schemas:
    Issue:
      type: object
      properties:
        id:   { type: string }
        key:  { type: string }
        self: { type: string, format: uri }
        fields:
          type: object
          properties:
            summary: { type: string }
            status:
              type: object
              properties:
                name: { type: string }
            priority:
              type: object
              properties:
                name: { type: string }
    CreatedIssue:
      type: object
      properties:
        id:  { type: string }
        key: { type: string }
    Transition:
      type: object
      properties:
        id:   { type: string }
        name: { type: string }
